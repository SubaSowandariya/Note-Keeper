import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class Note extends Frame implements ActionListener {
    Button create, date, subject;
    Label d1, y1, m1, s1;
    TextField td1, ty1, tm1, ts1;
    TextArea t1;
    TextField t2, t3;
    Label d2, y2, m2, s2, display;
    TextField td2, ty2, tm2, ts2;
    String s, d, y, tx, m;

    private static final String URL = "jdbc:mysql://localhost:3306/notemaking";
    private static final String USER = "root"; // Replace with your MySQL username
    private static final String PASSWORD = "Suba@123"; // Replace with your MySQL password

    public Note() {
        super("Note Keeper");
        setLayout(null);

        Label l = new Label("Note making");
        l.setBounds(50, 50, 200, 50);
        add(l);

        create = new Button("CREATE");
        create.setBounds(50, 120, 100, 50);
        create.addActionListener(this);
        create.setBackground(Color.BLUE);
        create.setForeground(Color.WHITE);
        add(create);

        t2 = new TextField(100);
        t2.setBounds(50, 680, 900, 100);
        add(t2);

        d1 = new Label("Date:");
        d1.setBounds(50, 180, 50, 30);
        add(d1);
        m1 = new Label("Month:");
        m1.setBounds(150, 180, 50, 30);
        add(m1);
        y1 = new Label("Year:");
        y1.setBounds(250, 180, 50, 30);
        add(y1);
        s1 = new Label("Subject:");
        s1.setBounds(350, 180, 50, 30);
        add(s1);

        td1 = new TextField(10);
        td1.setBounds(100, 180, 40, 30);
        add(td1);
        tm1 = new TextField(20);
        tm1.setBounds(200, 180, 40, 30);
        add(tm1);
        ty1 = new TextField(20);
        ty1.setBounds(300, 180, 40, 30);
        add(ty1);
        ts1 = new TextField(20);
        ts1.setBounds(400, 180, 100, 30);
        add(ts1);

        t1 = new TextArea(900, 100);
        t1.setBounds(50, 220, 900, 200);
        add(t1);

        display = new Label("Display");
        display.setBounds(50, 430, 50, 30);
        add(display);

        date = new Button("DATE");
        date.setBounds(50, 470, 100, 50);
        date.setBackground(Color.BLUE);
        date.setForeground(Color.WHITE);
        date.addActionListener(this);
        add(date);

        subject = new Button("SUBJECT");
        subject.setBounds(170, 470, 100, 50);
        subject.setBackground(Color.BLUE);
        subject.setForeground(Color.WHITE);
        subject.addActionListener(this);
        add(subject);

        d2 = new Label("Date:");
        d2.setBounds(50, 540, 50, 30);
        add(d2);
        m2 = new Label("Month:");
        m2.setBounds(150, 540, 50, 30);
        add(m2);
        y2 = new Label("Year:");
        y2.setBounds(250, 540, 50, 30);
        add(y2);
        s2 = new Label("Subject:");
        s2.setBounds(350, 540, 50, 30);
        add(s2);

        td2 = new TextField(20);
        td2.setBounds(100, 540, 40, 30);
        add(td2);
        tm2 = new TextField(20);
        tm2.setBounds(200, 540, 40, 30);
        add(tm2);
        ty2 = new TextField(20);
        ty2.setBounds(300, 540, 40, 30);
        add(ty2);
        ts2 = new TextField(20);
        ts2.setBounds(400, 540, 100, 30);
        add(ts2);

        t3 = new TextField("00");
        t3.setBounds(900, 900, 50, 50);
        add(t3);
    }

    private Connection connect() {
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(URL, USER, PASSWORD);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return conn;
    }

    public void create(String date, String year, String month, String subject, String text) {
        String sql = "INSERT INTO notes(date, month, year, subject, text) VALUES(?, ?, ?, ?, ?)";
        try (Connection conn = connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, date);
            pstmt.setString(2, month);
            pstmt.setString(3, year);
            pstmt.setString(4, subject);
            pstmt.setString(5, text);
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public void searchOnSub(String sb) {
        String sql = "SELECT date, month, year, text FROM notes WHERE subject = ?";
        try (Connection conn = connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, sb);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                td2.setText(rs.getString("date"));
                tm2.setText(rs.getString("month"));
                ty2.setText(rs.getString("year"));
                t2.setText(rs.getString("text"));
            } else {
                System.out.println("Notes not found");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public void searchOnDate(String date, String month, String year) {
        String sql = "SELECT subject, text FROM notes WHERE date = ? AND month = ? AND year = ?";
        try (Connection conn = connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, date);
            pstmt.setString(2, month);
            pstmt.setString(3, year);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                ts2.setText(rs.getString("subject"));
                t2.setText(rs.getString("text"));
            } else {
                System.out.println("Notes not found");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void main(String[] args) {
        Note d = new Note();
        d.setSize(1000, 1000);
        d.setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        Object o = e.getSource();
        if (o == create) {
            d = td1.getText();
            m = tm1.getText();
            y = ty1.getText();
            s = ts1.getText();
            tx = t1.getText();
            create(d, y, m, s, tx);
        }
        if (o == date) {
            d = td2.getText();
            m = tm2.getText();
            y = ty2.getText();
            searchOnDate(d, m, y);
        }
        if (o == subject) {
            s = ts2.getText();
            searchOnSub(s);
        }
    }
}
